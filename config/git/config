[user]
	name = Hiroyuki Shibuya
	email = h_shibuya@yumemi.co.jp
	signingkey = 8EF613704409A59C

[alias]
  pr  = !gh pr create -B $(git branch --sort=-committerdate | fzf) -a @me
  ad = !git diff --name-only | fzf -m | xargs git add
  sr = !git diff --staged --name-only | fzf -m | xargs git reset HEAD
  ada = add -A
  amd  = commit --amend --no-verify
  st  = status
  ss  = stash save -u
  sd = stash clear
  sl  = !git stash list | cut -d :" -f 2 | fzf --preview 'git stash show -p --color=always {}'"
  sp = !git stash list | fzf | cut -d :" -f 1 | xargs git stash pop"
  rmc = !git restore -- . && git clean -df .
  br  = branch
  brd = !git rbr | fzf --ansi -m | awk '{print $1}' | xargs git branch -D
  brda= !git branch -D `git branch | sed '/*/d' | tr '\n' ' '`
  cm  = commit --verbose --no-verify
  cmm = !git add -A && git status && git commit -m
  s  = switch
  sb  = !git rbr | fzf --ansi | awk '{print $1}' | xargs git switch
  sba = !git branch --all | tr -d '* ' | grep -v -e '->' | fzf | sed -e 's+remotes/[^/]*/++g' | xargs git switch
  pco = !gh pr list --limit 1000 | fzf --preview 'GH_FORCE_TTY=100% gh pr view {1}' | awk '{print $1}' | xargs gh pr checkout
  sc = switch -c
  scb= !git branch -a | fzf | xargs -I @ git switch -c -b @
  df  = diff
  dfb = !git branch --sort=-committerdate | fzf | xargs git diff
  dfh = diff HEAD
  lg  = log
  lgp = log -p
  lgs = log --stat
  lgg = log -G
  lgpg= log -p -G
  mg  = merge
  mgab= merge --abort
  mgb = !git merge `git branch --sort=-committerdate | fzf`
  mgr = !git branch -r | fzf | xargs git merge
  st  = status -s
  ps  = !git push origin `git rev-parse --abbrev-ref HEAD`
  psf  = !git ps --force-if-includes
  pst = !git push origin --tags
  pl  = !git pull origin `git rev-parse --abbrev-ref HEAD`
  psh = push heroku master
  rbc = !git log --oneline | fzf | awk '{print $1}' | xargs -I @ git rebase -i -p @~
  rbc = rebase --continue
  rba = rebase --abort
  rbb = !git branch -r | fzf | xargs git rebase
  rbl = !git branch --sort=-committerdate | fzf | xargs git rebase
  rf  = reflog --date=iso
  rs  = reset
  rsh = reset --hard
  bk  = reset --soft HEAD^
  cre = !git init && git add -A && git commit -m init && gh repo create && git push origin `git rev-parse --abbrev-ref HEAD` && gh repo view --web
  pr  = !gh pr create -B $(git branch --sort=-committerdate | fzf) -a @me
  pdf = !gh pr diff `gh pr list | fzf | cut -f 1`
  pmg = !gh pr merge
  op  = !gh repo view --web
  opg = !gh repo view `ghq list | fzf | cut -d "/" -f 2,3` --web
  opi = !gh issue view `gh issue list | fzf | cut -f 1` --web
  opp = !gh pr view `gh pr list | fzf | cut -f 1` --web
  fps = ftp push
  g   = !ghq get
  rmg = !rm -rf `ghq list -p | fzf`
  fst = fuzzy status
  fbr = fuzzy branch
  flg = fuzzy log
  fss = fuzzy stash
  fh = fetch
  cin = !gibo dump $(gibo list | fzf) >> .gitignore
  cmdl= git reset --soft HEAD^
  empty = !git commit --allow-empty -m 'empty' && git push
  rbr = !git for-each-ref --format='%(color:cyan)%(refname:short)%(color:reset) - %(color:yellow)%(committerdate:relative)%(color:reset)' --sort=-committerdate refs/heads/ refs/heads/
  rbrr= !git for-each-ref --format='%(color:cyan)%(refname:short)%(color:reset) %(color:yellow)%(committerdate:relative)%(color:reset)' --sort=-committerdate refs/heads/ refs/remotes/

[core]
	editor = code --wait
  pager = delta

[color]
  ui = true
  diff = auto
  branch = auto
  status = auto
  showbranch = auto

[color "branch"]
  local = green
  remote = red
  current = green reverse

[color "diff"]
  old = red bold
  new = green bold
  meta = yellow bold
  frag = magenta bold

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[commit]
  template = ~/.config/git/template/commit-template
	gpgsign = true
  verbose = true

[delta]
  line-numbers = true
  hunk-header-style = omit
  file-style = "#338ECF" ul
  file-decoration-style = none
  syntax-theme = Dracula
  whitespace-error-style = 22 reverse
  line-numbers-left-style = "#3D424D"
  line-numbers-right-style = "#3D424D"
  side-by-side = true

[interactive]
  diffFilter = delta --color-only

[ghq]
  root = ~/ghq/

[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true

[init]
  defaultBranch = main
  templateDir = ~/.config/git/template

[gitflow "branch"]
    main = main
    develop = develop

[gitflow "prefix"]
    feature = feature/
    release = release/
    hotfix = hotfix/
    support = support/

[pull]
	rebase = true

[diff]
  algorithm = histogram
  colorMoved = plain
  mnemonicPrefix = true
  renames = true

[column]
  ui = auto

[branch]
  sort = -committerdate

[tag]
  sort = version:refname

[push]
  default = simple
  autoSetupRemote = true
  followTags = true

[fetch]
  prune = true
  pruneTags = true
  all = true

[help]
  autocorrect = prompt

[rerere]
  enabled = true
  autoupdate = true

[rebase]
  autoSquash = true
  autoStash = true
  updateRefs = true