{
  "n回繰り返す": {
    "prefix": "narr",
    "body": ["[...Array(${1:n}).keys()]${2:.map((i) => i + 1)}"],
    "description": "配列作る"
  },
  "for": {
    "prefix": "for",
    "body": [
			"for (let ${1:i} = ${2:0}; ${1:i} ${3:<} ${4:n}; ${1:i}++) {",
			"\t$5",
			"}"
		],
    "description": "for"
  },
  "findSumOfDigits": {
    "prefix": "SumOfDigits",
    "body": [
      "let sum = 0;",
      "while (num > 0) {",
      "\tsum += Math.floor(num % 10);",
      "\tnum = Math.floor(num / 10);",
      "}"
    ],
    "description": "各桁の合計を返す"
  },
  "objectBuket": {
    "prefix": "objectBuket",
    "body": [
      "const buket = {}",
      "nums.forEach((num) => {",
      "\tbuket[num] = (buket[num] || 0) + 1;",
      "});"
    ],
    "description": "オブジェクトを使ったバケット"
  },
  "arrauyInit": {
    "prefix": "arrauyInit",
    "body": [
      "const ${1:arr}: number[] = Array(${2:len}).fill(0)"
    ],
    "description": "配列の初期化"
  }
}
