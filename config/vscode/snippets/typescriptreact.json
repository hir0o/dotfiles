{
  "function component": {
    "prefix": "fc",
    "body": [
      "import { FC } from 'react';",
      "",
      "export const ${1:${TM_FILENAME_BASE:ComponentName}}: FC = () => {",
      "\treturn (",
      "\t\t$2",
      "\t)",
      "};"
    ]
  },
  "function component with props": {
    "prefix": "fc",
    "body": [
      "import { FC } from 'react';",
      "",
      "type Props = {",
      "\t$2",
      "}",
      "",
      "export const ${1:${TM_FILENAME_BASE:ComponentName}}: FC<Props> = ({$3}) => {",
      "\treturn (",
      "\t\t$4",
      "\t)",
      "};"
    ]
  },
  "create a useState block": {
    "prefix": ["useState", "us"],
    "body": [
      "const [${1:state}, set${1/(.*)/${1:/capitalize}/}] = useState${3:<${4:Type}>}(${2:initialState})"
    ]
  },
  "next page component": {
    "prefix": "page",
    "body": [
      "import type { NextPage } from 'next'",
      "",
      "const Page: NextPage = () => {",
      "  return <div></div>",
      "}",
      "",
      "export default Page",
      ""
    ]
  },
  "state action type": {
    "prefix": "set state type",
    "body": ["Dispatch<SetStateAction<${0:type}>>"]
  },
  "useEffect": {
    "prefix": "ue",
    "body": ["useEffect(() => {", "\t$0", "}, []);"]
  },
  "useCallback": {
    "prefix": "uc",
    "body": ["const $1 = useCallback(() => {", "\t$2", "}, [])"],
    "description": "use callback"
  },
  "test": {
    "prefix": "test",
    "body": [
      "import { screen, render } from '@testing-library/react'",
      "import userEvent from '@testing-library/user-event'",
      "import '@testing-library/jest-dom'",
      "",
      "describe('$1', () => {",
      "  it('$2', () => {",
      "    $3",
      "  })",
      "})",
      ""
    ]
  },
  "props type": {
    "prefix": "props type",
    "body": ["type Props = {", "\t$1", "}"]
  }
}
